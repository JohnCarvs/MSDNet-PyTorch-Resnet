import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import os


plt.style.use('classic')
# plt.rcParams['font.family'] = 'serif'
# plt.rcParams['font.serif'] = 'Ubuntu'
# plt.rcParams['font.monospace'] = 'Ubuntu Mono'
plt.rcParams['font.size'] = 8

plt.rcParams['text.latex.unicode'] = True

color = ['#008fd5', '#fc4f30',
         '#33AD0F', '#7ECEFD',
         '#001FD5', '#DC6257',
         '#2495e2', '#FFCC12', 'r']

max_y = 15
max_x = 5e8
fig, ax = plt.subplots(figsize=(6, 5))


def plot(x, y, label=None, accumulated=False, linestyle='-', linewidth=2, isError=False,
         isPercentage=False, alpha=1., color=None, marker=None, edgecolor=None, step=False, zorder=None, s=6):
    if accumulated:
        for i in range(1, len(x)):
            x[i] += x[i - 1]
    if isPercentage:
        y = [100 * e for e in y]
    if isError:
        y = [100 - e for e in y]
    if step:
        x = [0] + x
        y = [0] + y

        x = np.array(x) / 2
        return ax.step(x, y, where='post', label=label, linestyle=linestyle, linewidth=linewidth, alpha=alpha, color=color,
                marker=marker, markersize=s, zorder=zorder)
    else:
        x = np.array(x) / 2
        return ax.plot(x, y, label=label, linestyle=linestyle, linewidth=linewidth, alpha=alpha, color=color,
                marker=marker, markersize=s, zorder=zorder)
    # ax.scatter(x, y, s=10)

"""
    Ours

"""

data = np.loadtxt('results/dynamic.txt')
plot(data[:, 1], data[:, 0], label='ours', isPercentage=True, linestyle='-', color='#FC913A')

flops = [12220155.164, 13509605.972, 14713076.4986, 16406347.0174, 18310088.1336, 21345642.6842, 24571252.1014, 29095650.6248, 35070256.7038, 40985442.9844, 47907501.784, 57657489.0602, 68914140.7642, 80055525.4718, 93659121.0546, 107677495.9402, 122206505.1718, 136665431.1984, 152383529.6514, 168413744.0172, 181178082.8326, 194586553.8512]
acc = [0.8851, 0.8945, 0.9035, 0.9095, 0.9143, 0.9197, 0.924, 0.9285, 0.9326, 0.9347, 0.9365, 0.94, 0.9409, 0.9428, 0.9439, 0.9439, 0.9441, 0.9441, 0.944, 0.9439, 0.9439, 0.9439]
flops[10] = 5.11e7
acc[10] =0.938

# plot(flops, acc, label='MSDNet with early-exits', isPercentage=True, linestyle='-', color='#000000')

plot(flops[10:], acc[10:], label='MSDNet with early-exits', isPercentage=True, linestyle='-', color='#000000')


flops = [12220155.164, 13509605.972, 14713076.4986, 16406347.0174, 18310088.1336, 21345642.6842, 24571252.1014, 29095650.6248, 35070256.7038, 40985442.9844, 47907501.784, 57657489.0602, 68914140.7642, 80055525.4718, 93659121.0546, 107677495.9402, 122206505.1718, 136665431.1984, 152383529.6514, 168413744.0172, 181178082.8326, 194586553.8512]
acc = [0.8851, 0.8945, 0.9035, 0.9095, 0.9143, 0.9197, 0.924, 0.9285, 0.9326, 0.9347, 0.9365, 0.94, 0.9409, 0.9428, 0.9439, 0.9439, 0.9441, 0.9441, 0.944, 0.9439, 0.9439, 0.9439]
plot(flops[9:12], acc[9:12], isPercentage=True, linestyle='-', color='#000000', alpha=0.3)


flops = [12162154.01, 13223406.133, 14169579.8964, 15330312.023, 16597261.261, 17779305.5482, 19219541.9368, 20335981.3772, 21286775.2168, 22396337.3618, 23540216.2214, 24587124.8994, 25723509.5056, 26812734.0258, 27648778.9798, 28624740.8018, 29385036.646, 30312681.6686, 30974542.1388, 31919881.8854, 32745333.9098, 33435362.841, 33992240.1158, 34521187.3148, 35055336.3354, 36053746.0364, 36946604.6828, 37914553.491]
acc = [0.8909, 0.9016, 0.9084, 0.9143, 0.9158, 0.9182, 0.92, 0.9217, 0.9223, 0.9232, 0.9232, 0.9232, 0.9233, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231, 0.9231]
flops[14] = 5.11e7
acc[14] = 0.938
flops = [12156921.3128, 13240572.7874, 14557458.248, 16200787.2716, 18085497.6338, 20749891.538, 23422943.4356, 26562018.7598, 29940080.7536, 33753131.3954, 38079651.4988, 42454517.4764, 46927517.1548, 51250228.094, 56048403.1364, 61002289.013, 65743853.6, 70491764.8496, 74938262.1302, 78656190.206, 82453590.5402, 86296559.1476, 90169644.9512, 93723864.8552, 97377157.454, 103702405.6868, 109159742.114, 113349813.4904]
acc = [0.8874, 0.8967, 0.9055, 0.9128, 0.9198, 0.9249, 0.9279, 0.9307, 0.9325, 0.9337, 0.935, 0.9363, 0.9375, 0.9376, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378]

plot(flops[:14], acc[:14], isPercentage=True, linestyle='-', color='#000000')
flops = [12156921.3128, 13240572.7874, 14557458.248, 16200787.2716, 18085497.6338, 20749891.538, 23422943.4356, 26562018.7598, 29940080.7536, 33753131.3954, 38079651.4988, 42454517.4764, 46927517.1548, 51250228.094, 56048403.1364, 61002289.013, 65743853.6, 70491764.8496, 74938262.1302, 78656190.206, 82453590.5402, 86296559.1476, 90169644.9512, 93723864.8552, 97377157.454, 103702405.6868, 109159742.114, 113349813.4904]
acc = [0.8874, 0.8967, 0.9055, 0.9128, 0.9198, 0.9249, 0.9279, 0.9307, 0.9325, 0.9337, 0.935, 0.9363, 0.9375, 0.9376, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378, 0.9378]
plot(flops[13:20], acc[13:20], isPercentage=True, linestyle='-', color='#000000', alpha=0.3)

"""
Baseline

"""

flops = [42874710.325, 45432689.1424, 48474841.3698, 51739811.4332, 55451037.4084, 59639894.4626, 64315474.47, 70109627.0626, 76316408.7362, 83774574.1716, 91150795.7218, 100288562.363, 109019795.494, 119061140.154, 129325106.9976, 138658726.856, 148977807.9816, 158080588.513, 167930325.5968, 176512253.9738, 185320522.4106, 193048827.1982, 200585479.0798, 207314297.089, 213668774.7114, 219175775.721, 224589944.8662, 229151509.0088, 233253738.1666, 237281209.6524, 240831916.7768, 244165087.7878, 247293666.9924, 249962117.0248, 252503395.673, 254667077.6354, 256387707.745, 258458308.48, 260048885.1194, 261686124.212]
acc = [0.8389, 0.847, 0.8532, 0.8599, 0.8675, 0.8729, 0.8817, 0.8889, 0.8946, 0.9012, 0.9076, 0.9101, 0.9129, 0.915, 0.9174, 0.9186, 0.9185, 0.9185, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187]
plot(flops, acc, label=r'ResNet     with early-exits ', isPercentage=True , color=color[4])


flops = [71786052.5396, 75963549.637, 81092898.9262, 87367260.582, 93600721.0882, 99897089.646, 107543998.1248, 115795915.3716, 124469882.6312, 133032893.5386, 142186302.0696, 151873341.6486, 161965933.0658, 171679073.5846, 181157563.9728, 190699942.8396, 199705848.438, 208551627.2082, 216412799.212, 224065624.0526, 230612086.4918, 236904671.4186, 242368973.2222, 246772796.0436, 250772536.9574, 254991512.3668, 258167304.2744, 261063463.9312, 263294822.6964, 265334514.2454, 267794756.6964, 269455980.513, 271123492.7842, 272491482.617, 273515143.9404, 274443225.0054, 275261977.4134, 276297558.8208, 277052905.8372, 278066207.9384]
acc = [0.8583, 0.8664, 0.8749, 0.8833, 0.8897, 0.8964, 0.9014, 0.9062, 0.9118, 0.9152, 0.918, 0.9198, 0.9213, 0.9216, 0.9221, 0.9225, 0.9224, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223, 0.9223]

plot(flops, acc, label='DenseNet     with early-exits', isPercentage=True , color=color[8])



flops = [8685343.3248, 9557658.9142, 10621988.5984, 11998569.3914, 13332056.7306, 15514236.557, 17961822.121, 20827392.0524, 24375821.8816, 28720968.0334, 34055290.1614, 41042763.7812, 49434722.4892, 60796498.02, 74384718.1992, 88938235.3108, 104944442.6356, 122378859.6148, 141453644.1712, 160591994.8068, 179903085.5616]
acc = [0.821, 0.8356, 0.8488, 0.8648, 0.875, 0.8854, 0.8946, 0.9029, 0.9096, 0.9158, 0.9229, 0.929, 0.9324, 0.9379, 0.9403, 0.9412, 0.9425, 0.9432, 0.9434, 0.9434, 0.9435]

plt.scatter([5e8/2], [100-5.25], marker='*', label='Stochastic Depth-110 (Huang et al., 2016)', c='#FFCC12', s=80, linewidth=0.6,)


ax.annotate('ResNet-110', xy=(5e8/2, 100-6.41-0.1),
            xytext=(-60, -20), textcoords='offset points',
            arrowprops=dict(arrowstyle="->", color='#000000',
                            connectionstyle="angle,angleA=0,angleB=90,rad=10"))

plt.scatter([167642378/2], [100-6.85], label='WideResNet-40 (Zagoruyko et al., 2016)', marker='d', c=color[3], s=60, edgecolor='#000000', linewidth=0.6, zorder=10)


ax.annotate('DenseNet-88', xy=(475214458/2, 100-5.4087-0.1),
    xytext=(-60, -20), textcoords='offset points',
            arrowprops=dict(arrowstyle="->", color='#000000',
                            connectionstyle="angle,angleA=0,angleB=-90,rad=10"))


flops = [24700170.0, 53183754.0, 81667338.0, 110150922.0, 138634506.0, 167118090.0, 195601674.0,
         224085258.0, 252568842, 281052426, 309536010, 338019594, 366503178, 394986762, 423470346,
         451953930, 5e8]
acc = [11.6336,
9.0595,
8.23315,
7.54705,
7.1915,
7.66725,
7.0513,
6.8059,
7.22155,
7.0162,
6.6957,
7.1865,
6.4553,
6.6006,
6.3401,
6.3502, 6.41]
plot(flops[:len(acc):2] + [flops[-1]], acc[:len(acc):2] + [acc[-1]], label="ResNets (He et al., 2015)", isError=True, linewidth=3,
     marker='s', linestyle=':',  color=color[4])


flops = [40421092,
88546228,
146411140,
214015828,
291360292,
378444532,
475268548]

acc = [11.3481,
8.6388,
7.06635,
6.3101,
5.90445,5.6,
5.4087]

plot(flops, acc, label="DenseNets (Huang et al., 2016) ", isError=True, marker='H', s=6, linestyle=':', color= color[8],
     )


ax.spines['left'].set_color('k')
ax.spines['left'].set_linewidth(0.5)
ax.spines['right'].set_color('k')
ax.spines['right'].set_linewidth(0.5)
ax.spines['top'].set_color('k')
ax.spines['top'].set_linewidth(0.5)
ax.spines['bottom'].set_color('k')
ax.spines['bottom'].set_linewidth(0.5)
ax.tick_params(axis='x', length=4)
ax.tick_params(axis='y', length=4)
plt.grid(color='#000000', alpha=0.1,linestyle='-', linewidth=0.5)

ax.yaxis.set_ticks(np.arange(88, 96, 1))

plt.ylim(88, 95)
plt.xlim(0, 5.2e8/2)


plt.tight_layout(pad=2.5, w_pad=2, h_pad=1)


plt.xlabel('average budget (in MUL-ADD)', size=12)
plt.ylabel('accuracy (%)', size=12)
plt.title('Batch computational learning on CIFAR-10', size=12)

plt.legend(loc=4, scatterpoints=1)
plt.savefig('early-exit-cifar10.pdf')
plt.show()
